<!DOCTYPE html>
<html>
  <head>
    <title>Siyavula API - Practice Activity</title>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <link rel="stylesheet" href="https://www.siyavula.com/static/themes/emas/siyavula-api/siyavula-api.min.css"/>
    <link rel="stylesheet" href="static/css/styles.css"/>
  </head>
  <body>
    <main class="sv">
      <div class="activity" id="practice">
        <div class="activity-header">
          <h1>Practice</h1>
          <div class="activity-badges">
            <div class="activity-badge">
              Chapter Mastery: <span id="value">0</span>%
            </div>
            <div class="activity-badge">
              Section Mastery: <span id="value">0</span>%
            </div>
          </div>
        </div>
        <div class="question-content"></div>
      </div>
    </main>

    <script src="{{ api_base_url }}static/themes/emas/node_modules/mathjax/MathJax.js?config=TeX-MML-AM_HTMLorMML-full"></script>
    <script src="{{ api_base_url }}static/themes/emas/siyavula-api/js/v2/siyavula-api.js"></script>
    <script>
      const manager = new Siyavula.SiyavulaActivityManager();
      const config = {
        baseUrl: "{{ api_base_url }}",
        token: "{{ token }}",
        userToken: "{{ user_token }}",
        showLivePreview: true,
      };

      async function initializeActivities() {
        try {
          const practice = await manager.createActivity(
            "#practice",
            config,
            "practice",
            {
              sectionId: 204,
            }
          );

          practice.renderer.on("activityProgressUpdate", (data) => {
            const chapterMastery = data.chapter.mastery.toFixed(2) || "0";
            const sectionMastery = data.section.mastery.toFixed(2) || "0";

            const badge = practice.renderer.container.querySelectorAll(
              ".activity-badge #value"
            );
            const chapterMasteryBadge = badge[0];
            const sectionMasteryBadge = badge[1];

            chapterMasteryBadge.textContent = chapterMastery;
            sectionMasteryBadge.textContent = sectionMastery;
          });

          // Trigger initial progress update
          practice.renderer.emit(
            "activityProgressUpdate",
            practice.currentActivity.progress
          );
        } catch (error) {
          console.error("Failed to initialize activities:", error);
        }
      }

      document.addEventListener("DOMContentLoaded", () => {
        initializeActivities();
      });
    </script>
  </body>
</html>
